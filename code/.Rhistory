wp$d4_gender <- abs(wp$x_female - city_female) / (wp$x_female + city_female) / 2 +
abs(wp$x_male - city_male) / (wp$x_male + city_male) / 2
wp$d4_race <- abs(wp$x_white - city_white) / (wp$x_white + city_white) / 2 +
abs(wp$x_black - city_black) / (wp$x_black + city_black) / 2  +
abs(wp$x_hispanic - city_hispanic) / (wp$x_hispanic + city_hispanic) / 2 +
abs(wp$x_asian - city_asian) / (wp$x_asian + city_asian) / 2 +
abs(wp$x_sor - city_sor) / (wp$x_sor + city_sor) / 2
wp$d3_gender_norm <-
(wp$d3_gender - min(wp$d3_gender)) / (max(wp$d3_gender) - min(wp$d3_gender)) *100
wp$d3_race_norm <-
(wp$d3_race - min(wp$d3_race)) / (max(wp$d3_race) - min(wp$d3_race)) *100
wp$d3_norm_high <- wp$d3_norm > 70
wp$d3_gender_norm_high <- wp$d3_gender_norm > 70
wp$d3_race_norm_high <- wp$d3_race_norm > 70
wp$d3_gender_race_norm_high <- wp$d3_gender_norm > 70 | wp$d3_race_norm > 70
#write.csv(wp, 'data/agency_diversity_calculations.csv', row.names = F)
wp
head(wp)
# ***TO DO: GET NEW DATA***
# read in 2018-2020 agency diversity csv (from DCAS worker profile)
wp_18 <- read.csv("../data/Agency_Diversity_18.csv") %>% janitor::clean_names()
wp_19 <- read.csv("../data/Agency_Diversity_19.csv") %>% janitor::clean_names()
wp_20 <- read.csv("../data/Agency_Diversity_20.csv") %>% janitor::clean_names()
run_calc <- function(wp, city_female, city_male, city_white, city_black, city_hispanic, city_asian, city_sor) {
wp$d1 <- abs(wp$x_female - city_female) + abs(wp$x_male - city_male) +
abs(wp$x_white - city_white) + abs(wp$x_black - city_black) +
abs(wp$x_hispanic - city_hispanic) + abs(wp$x_asian - city_asian) +
abs(wp$x_sor - city_sor)
wp$d2 <- abs(wp$x_female - city_female)/city_female +
abs(wp$x_male - city_male)/city_male +
abs(wp$x_white - city_white)/city_white +
abs(wp$x_black - city_black)/city_black +
abs(wp$x_hispanic - city_hispanic)/city_hispanic +
abs(wp$x_asian - city_asian)/city_asian +
abs(wp$x_sor - city_sor)/city_sor
wp$d4 <- abs(wp$x_female - city_female) / (wp$x_female - city_female) /2  +
abs(wp$x_male - city_male) / (wp$x_male - city_male) /2 +
abs(wp$x_white - city_white) / (wp$x_white - city_white) /2 +
abs(wp$x_black - city_black)/ (wp$x_black - city_black) /2 +
abs(wp$x_hispanic - city_hispanic)/ (wp$x_hispanic - city_hispanic) /2 +
abs(wp$x_asian - city_asian)/ (wp$x_asian - city_asian) /2 +
abs(wp$x_sor - city_sor)/ (wp$x_sor - city_sor) /2
wp$d3 <- sqrt((wp$x_female - city_female)^2 +
(wp$x_male - city_male)^2 +
(wp$x_white - city_white)^2 +
(wp$x_black - city_black)^2 +
(wp$x_hispanic - city_hispanic)^2 +
(wp$x_asian - city_asian)^2 +
(wp$x_sor - city_sor)^2 )
wp$d5 <- abs(wp$x_female - city_female) / (wp$x_female + city_female) /2  +
abs(wp$x_male - city_male) / (wp$x_male + city_male) /2 +
abs(wp$x_white - city_white) / (wp$x_white + city_white) /2 +
abs(wp$x_black - city_black)/ (wp$x_black + city_black) /2 +
abs(wp$x_hispanic - city_hispanic)/ (wp$x_hispanic + city_hispanic) /2 +
abs(wp$x_asian - city_asian)/ (wp$x_asian + city_asian) /2 +
abs(wp$x_sor - city_sor)/ (wp$x_sor + city_sor) /2
return(wp)
}
# ***TO DO: distance to city diversity calculations for ALL 2018-2020***
wp_18 <- run_calc(wp_18, city_female_18, city_male_18, city_white_18, city_black_18, city_hispanic_18, city_asian_18, city_sor_18)
wp_19 <- run_calc(wp_19, city_female_19, city_male_19, city_white_19, city_black_19, city_hispanic_19, city_asian_19, city_sor_19)
wp_20 <- run_calc(wp_20, city_female_20, city_male_20, city_white_20, city_black_20, city_hispanic_20, city_asian_20, city_sor_20)
head(wp_18)
head(wp)
run_calc_2 <- function(wp, city_female, city_male, city_white, city_black, city_hispanic, city_asian, city_sor) {
wp$d3_norm <- (wp$d3 - min(wp$d3)) / (max(wp$d3) - min(wp$d3)) * 100
wp$d4_norm <- (wp$d4 - min(wp$d4)) / (max(wp$d4) - min(wp$d4)) * 100
wp$d3_gender <- sqrt((wp$x_female - city_female)^2 + (wp$x_male - city_male)^2)
wp$d3_race <- sqrt((wp$x_white - city_white)^2 + (wp$x_black - city_black)^2 +
(wp$x_hispanic - city_hispanic)^2 +  (wp$x_asian - city_asian)^2  +
(wp$x_sor - city_sor)^2)
wp$d4_gender <- abs(wp$x_female - city_female) / (wp$x_female + city_female) / 2 +
abs(wp$x_male - city_male) / (wp$x_male + city_male) / 2
wp$d4_race <- abs(wp$x_white - city_white) / (wp$x_white + city_white) / 2 +
abs(wp$x_black - city_black) / (wp$x_black + city_black) / 2  +
abs(wp$x_hispanic - city_hispanic) / (wp$x_hispanic + city_hispanic) / 2 +
abs(wp$x_asian - city_asian) / (wp$x_asian + city_asian) / 2 +
abs(wp$x_sor - city_sor) / (wp$x_sor + city_sor) / 2
wp$d3_gender_norm <-
(wp$d3_gender - min(wp$d3_gender)) / (max(wp$d3_gender) - min(wp$d3_gender)) *100
wp$d3_race_norm <-
(wp$d3_race - min(wp$d3_race)) / (max(wp$d3_race) - min(wp$d3_race)) *100
wp$d3_norm_high <- wp$d3_norm > 70
wp$d3_gender_norm_high <- wp$d3_gender_norm > 70
wp$d3_race_norm_high <- wp$d3_race_norm > 70
wp$d3_gender_race_norm_high <- wp$d3_gender_norm > 70 | wp$d3_race_norm > 70
return(wp)
}
# for github chart
write.csv(run_calc_2(wp_18, city_female_18, city_male_18, city_white_18, city_black_18, city_hispanic_18, city_asian_18, city_sor_18), '../data/agency_diversity_calculations_18_check.csv', row.names = F)
write.csv(run_calc_2(wp_19, city_female_19, city_male_19, city_white_19, city_black_19, city_hispanic_19, city_asian_19, city_sor_19), '../data/agency_diversity_calculations_19.csv', row.names = F)
write.csv(run_calc_2(wp_20, city_female_20, city_male_20, city_white_20, city_black_20, city_hispanic_20, city_asian_20, city_sor_20), '../data/agency_diversity_calculations_20.csv', row.names = F)
head(wp_18)
head(wp)
run_calc_2 <- function(wp, city_female, city_male, city_white, city_black, city_hispanic, city_asian, city_sor) {
wp$d3_norm <- (wp$d3 - min(wp$d3)) / (max(wp$d3) - min(wp$d3)) * 100
wp$d4_norm <- (wp$d4 - min(wp$d4)) / (max(wp$d4) - min(wp$d4)) * 100
wp$d3_gender <- sqrt((wp$x_female - city_female)^2 + (wp$x_male - city_male)^2)
wp$d3_race <- sqrt((wp$x_white - city_white)^2 + (wp$x_black - city_black)^2 +
(wp$x_hispanic - city_hispanic)^2 +  (wp$x_asian - city_asian)^2  +
(wp$x_sor - city_sor)^2)
wp$d4_gender <- abs(wp$x_female - city_female) / (wp$x_female + city_female) / 2 +
abs(wp$x_male - city_male) / (wp$x_male + city_male) / 2
wp$d4_race <- abs(wp$x_white - city_white) / (wp$x_white + city_white) / 2 +
abs(wp$x_black - city_black) / (wp$x_black + city_black) / 2  +
abs(wp$x_hispanic - city_hispanic) / (wp$x_hispanic + city_hispanic) / 2 +
abs(wp$x_asian - city_asian) / (wp$x_asian + city_asian) / 2 +
abs(wp$x_sor - city_sor) / (wp$x_sor + city_sor) / 2
wp$d3_gender_norm <-
(wp$d3_gender - min(wp$d3_gender)) / (max(wp$d3_gender) - min(wp$d3_gender)) *100
wp$d3_race_norm <-
(wp$d3_race - min(wp$d3_race)) / (max(wp$d3_race) - min(wp$d3_race)) *100
wp$d3_norm_high <- wp$d3_norm > 70
wp$d3_gender_norm_high <- wp$d3_gender_norm > 70
wp$d3_race_norm_high <- wp$d3_race_norm > 70
wp$d3_gender_race_norm_high <- wp$d3_gender_norm > 70 | wp$d3_race_norm > 70
return(wp)
}
run_calc_2(wp_18)
run_calc_2 <- function(wp, city_female, city_male, city_white, city_black, city_hispanic, city_asian, city_sor) {
wp$d3_norm <- (wp$d3 - min(wp$d3)) / (max(wp$d3) - min(wp$d3)) * 100
wp$d4_norm <- (wp$d4 - min(wp$d4)) / (max(wp$d4) - min(wp$d4)) * 100
wp$d3_gender <- sqrt((wp$x_female - city_female)^2 + (wp$x_male - city_male)^2)
wp$d3_race <- sqrt((wp$x_white - city_white)^2 + (wp$x_black - city_black)^2 +
(wp$x_hispanic - city_hispanic)^2 +  (wp$x_asian - city_asian)^2  +
(wp$x_sor - city_sor)^2)
wp$d4_gender <- abs(wp$x_female - city_female) / (wp$x_female + city_female) / 2 +
abs(wp$x_male - city_male) / (wp$x_male + city_male) / 2
wp$d4_race <- abs(wp$x_white - city_white) / (wp$x_white + city_white) / 2 +
abs(wp$x_black - city_black) / (wp$x_black + city_black) / 2  +
abs(wp$x_hispanic - city_hispanic) / (wp$x_hispanic + city_hispanic) / 2 +
abs(wp$x_asian - city_asian) / (wp$x_asian + city_asian) / 2 +
abs(wp$x_sor - city_sor) / (wp$x_sor + city_sor) / 2
wp$d3_gender_norm <-
(wp$d3_gender - min(wp$d3_gender)) / (max(wp$d3_gender) - min(wp$d3_gender)) *100
wp$d3_race_norm <-
(wp$d3_race - min(wp$d3_race)) / (max(wp$d3_race) - min(wp$d3_race)) *100
wp$d3_norm_high <- wp$d3_norm > 70
wp$d3_gender_norm_high <- wp$d3_gender_norm > 70
wp$d3_race_norm_high <- wp$d3_race_norm > 70
wp$d3_gender_race_norm_high <- wp$d3_gender_norm > 70 | wp$d3_race_norm > 70
return(wp)
}
temp <- run_calc(wp_18, city_female_18, city_male_18, city_white_18, city_black_18, city_hispanic_18, city_asian_18, city_sor_18)
head(temp)
head(wp)
run_calc_2 <- function(wp, city_female, city_male, city_white, city_black, city_hispanic, city_asian, city_sor) {
wp$d3_norm <- (wp$d3 - min(wp$d3)) / (max(wp$d3) - min(wp$d3)) * 100
wp$d4_norm <- (wp$d4 - min(wp$d4)) / (max(wp$d4) - min(wp$d4)) * 100
wp$d3_gender <- sqrt((wp$x_female - city_female)^2 + (wp$x_male - city_male)^2)
wp$d3_race <- sqrt((wp$x_white - city_white)^2 + (wp$x_black - city_black)^2 +
(wp$x_hispanic - city_hispanic)^2 +  (wp$x_asian - city_asian)^2  +
(wp$x_sor - city_sor)^2)
wp$d4_gender <- abs(wp$x_female - city_female) / (wp$x_female + city_female) / 2 +
abs(wp$x_male - city_male) / (wp$x_male + city_male) / 2
wp$d4_race <- abs(wp$x_white - city_white) / (wp$x_white + city_white) / 2 +
abs(wp$x_black - city_black) / (wp$x_black + city_black) / 2  +
abs(wp$x_hispanic - city_hispanic) / (wp$x_hispanic + city_hispanic) / 2 +
abs(wp$x_asian - city_asian) / (wp$x_asian + city_asian) / 2 +
abs(wp$x_sor - city_sor) / (wp$x_sor + city_sor) / 2
wp$d3_gender_norm <-
(wp$d3_gender - min(wp$d3_gender)) / (max(wp$d3_gender) - min(wp$d3_gender)) *100
wp$d3_race_norm <-
(wp$d3_race - min(wp$d3_race)) / (max(wp$d3_race) - min(wp$d3_race)) *100
wp$d3_norm_high <- wp$d3_norm > 70
wp$d3_gender_norm_high <- wp$d3_gender_norm > 70
wp$d3_race_norm_high <- wp$d3_race_norm > 70
wp$d3_gender_race_norm_high <- wp$d3_gender_norm > 70 | wp$d3_race_norm > 70
return(wp)
}
# for github chart
write.csv(run_calc_2(wp_18, city_female_18, city_male_18, city_white_18, city_black_18, city_hispanic_18, city_asian_18, city_sor_18), '../data/agency_diversity_calculations_18.csv', row.names = F)
write.csv(run_calc_2(wp_19, city_female_19, city_male_19, city_white_19, city_black_19, city_hispanic_19, city_asian_19, city_sor_19), '../data/agency_diversity_calculations_19.csv', row.names = F)
write.csv(run_calc_2(wp_20, city_female_20, city_male_20, city_white_20, city_black_20, city_hispanic_20, city_asian_20, city_sor_20), '../data/agency_diversity_calculations_20.csv', row.names = F)
# load libraries ----
library(RSocrata)
library(skimr)
library(dplyr)
library(tidyr)
library(hrbrthemes)
library(plotly)
library(ggplot2)
# read dataset ----
r <- read.socrata("https://data.cityofnewyork.us/resource/423i-ukqr.json?$limit=9999999999", stringsAsFactors = F)
r1_t <- r1 %>%
select(race, ethnicity, race1, race_ethnicity)
# cleaning data -----------
r$number_of_employees_middle <- as.numeric(gsub("<5", "2.5", r$number_of_employees))
r$number_of_employees_top <- as.numeric(gsub("<5", "4", r$number_of_employees))
r$number_of_employees_bottom <- as.numeric(gsub("<5", "1", r$number_of_employees))
r$agency_name <- gsub("'", "", r$agency_name)
r$gender <- gsub("Unknown or Choose Not to Disclose", "Unknown", r$gender)
# shorten the names, to acroynms of agencies for diagnostic plots ----
r1 <- r %>%  mutate_at(vars(c(1:3,7:10)), as.factor)
r1$agency <- r1$agency_name
r1$agency_name <- recode(r1$agency,
`ADMINISTRATION FOR CHILDRENS SERVICES` = "ACS",
`BUSINESS INTEGRITY COMMISSION` = "BIC",
`DEPARTMENT FOR THE AGING` = "DFTA",
`DEPARTMENT OF BUILDINGS` = "DOB",
`DEPARTMENT OF CITY PLANNING` = "DCP",
`DEPARTMENT OF CITYWIDE ADMINISTRATIVE SERVICES` = "DCAS",
`DEPARTMENT OF CONSUMER AFFAIRS` = "DCA",
`DEPARTMENT OF CORRECTION` = "DOC",
`DEPARTMENT OF CULTURAL AFFAIRS` = "DCLA",
`DEPARTMENT OF DESIGN AND CONSTRUCTION` = "DDC",
`DEPARTMENT OF EDUCATION (NON-PEDAGOGICAL)` = "DOE*",
`DEPARTMENT OF ENVIRONMENTAL PROTECTION` = "DEP",
`DEPARTMENT OF FINANCE` = "DOF",
`DEPARTMENT OF HEALTH AND MENTAL HYGIENE` = "DOHMH",
`DEPARTMENT OF HOMELESS SERVICES` = "DHS",
`DEPARTMENT OF INFORMATION TECHNOLOGY AND TELECOMMUNICATIONS` = "DOITT",
`DEPARTMENT OF INVESTIGATION` = "DOI",
`DEPARTMENT OF PARKS AND RECREATION` = "PARKS",
`DEPARTMENT OF PROBATION` = "DOP",
`DEPARTMENT OF RECORDS AND INFORMATION SERVICES` = "DORIS",
`DEPARTMENT OF SANITATION` = "DSNY",
`DEPARTMENT OF SMALL BUSINESS SERVICES` = "SBS",
`DEPARTMENT OF TRANSPORTATION` = "DOT",
`DEPARTMENT OF VETERANS SERVICES` = "DVS",
`DEPARTMENT OF YOUTH AND COMMUNITY DEVELOPMENT` = "DYCD",
`FIRE DEPARTMENT` = "FDNY",
`HOUSING PRESERVATION AND DEVELOPMENT` = "HPD",
`HUMAN RESOURCES ADMINISTRATION/DEPARTMENT OF SOCIAL SERVICES` = "HRA/DSS",
`LAW DEPARTMENT` = "LAW",
`MAYORS OFFICE OF CONTRACT SERVICES` = "MOCS",
`OFFICE OF ADMINISTRATIVE TRIALS AND HEARINGS`= "OATH",
`OFFICE OF EMERGENCY MANAGEMENT` = "OEM",
`OFFICE OF LABOR RELATIONS` = "OLR",
`OFFICE OF MANAGEMENT AND BUDGET` = "OMB",
`OFFICE OF THE MAYOR` = "MAYORS",
`POLICE DEPARTMENT` = "NYPD" )
# get avg pay ----------
r1$lower_pay <- as.numeric(unlist(lapply(strsplit(r1$pay_band, "-"), "[", 1)))
r1$higher_pay <- as.numeric(unlist(lapply(strsplit(r1$pay_band, "-"), "[", 2)))
r1$avg_pay <- (r1$lower_pay + r1$higher_pay) /2
# ***TO DO: UPDATE NAMING CONVENTIONS***
recode_re <- function(r1) {
temp <- r1
temp$race1 <- as.character(temp$race)
u= c("Two or More Races",
"American Indian or Alaska Native",
"Unknown or Choose Not to Disclose")
temp$race1[temp$race1 %in% u]  <- "Other"
temp$race1[temp$race1 == "Native Hawaiian or Pacific Islander" | temp$race1 == "Asian"] <- "Asian"
temp$race1[temp$race1 == "Black or African American"] <- "Black"
temp$race_ethnicity <- temp$race1
temp <- temp %>% mutate(race_ethnicity = recode(race1, "Black" = "NH Black", # BLACK ALONE
"White" = "NH White", # WHITE ALONE
"Other" = "NH SOR or Race UCND", # AMERICAN INDIAN ALONE, # NATIVE, NOT SPEC/NO OTHER, AK NATIVE ALONE, SOR, TWO OR MORE
"Asian" = "NH Asian")) # ASIAN ALONE | NATIVE HAWAIIAN OR PACIFIC ISL
# temp[temp$ethnicity=="Unknown or Choose Not to Disclose" &
#    temp$race=="Unknown or Choose Not to Disclose",]$race_ethnicity <-
# rep("Ethnicity Unknown or Choose Not to Disclose", length(temp[temp$ethnicity=="Unknown or Choose Not to Disclose" & temp$race=="Unknown or Choose Not to Disclose",]$race_ethnicity))
temp[temp$ethnicity=="Unknown or Choose Not to Disclose",]$race_ethnicity <-
rep("Ethnicity Unknown or Choose Not to Disclose", length(temp[temp$ethnicity=="Unknown or Choose Not to Disclose",]$race_ethnicity))
temp[temp$ethnicity=="Hispanic or Latino",]$race_ethnicity <-
rep("Hispanic or Latino", length(temp[temp$ethnicity=="Hispanic or Latino",]$race_ethnicity))
temp$race1[temp$race1 == "Unknown or Choose Not to Disclose"] <- "NH SOR or Race UCND"
return(temp)
}
r1_t <- r1 %>%
select(race, ethnicity, race1, race_ethnicity)
r1
temp <- r1 %>%
group_by(data_year, agency_name) %>%
summarise(count=n())
temp
r1 <- recode_re(r1)
r1
temp <- r1 %>%
group_by(data_year, agency_name) %>%
summarise(count=n())
temp
# load libraries ----
library(RSocrata)
library(skimr)
library(dplyr)
library(tidyr)
library(hrbrthemes)
library(plotly)
library(ggplot2)
# read dataset ----
r <- read.socrata("https://data.cityofnewyork.us/resource/423i-ukqr.json?$limit=9999999999", stringsAsFactors = F)
# cleaning data -----------
r$number_of_employees_middle <- as.numeric(gsub("<5", "2.5", r$number_of_employees))
r$number_of_employees_top <- as.numeric(gsub("<5", "4", r$number_of_employees))
r$number_of_employees_bottom <- as.numeric(gsub("<5", "1", r$number_of_employees))
r$agency_name <- gsub("'", "", r$agency_name)
r$gender <- gsub("Unknown or Choose Not to Disclose", "Unknown", r$gender)
# shorten the names, to acroynms of agencies for diagnostic plots ----
r1 <- r %>%  mutate_at(vars(c(1:3,7:10)), as.factor)
r1$agency <- r1$agency_name
r1$agency_name <- recode(r1$agency,
`ADMINISTRATION FOR CHILDRENS SERVICES` = "ACS",
`BUSINESS INTEGRITY COMMISSION` = "BIC",
`DEPARTMENT FOR THE AGING` = "DFTA",
`DEPARTMENT OF BUILDINGS` = "DOB",
`DEPARTMENT OF CITY PLANNING` = "DCP",
`DEPARTMENT OF CITYWIDE ADMINISTRATIVE SERVICES` = "DCAS",
`DEPARTMENT OF CONSUMER AFFAIRS` = "DCA",
`DEPARTMENT OF CORRECTION` = "DOC",
`DEPARTMENT OF CULTURAL AFFAIRS` = "DCLA",
`DEPARTMENT OF DESIGN AND CONSTRUCTION` = "DDC",
`DEPARTMENT OF EDUCATION (NON-PEDAGOGICAL)` = "DOE*",
`DEPARTMENT OF ENVIRONMENTAL PROTECTION` = "DEP",
`DEPARTMENT OF FINANCE` = "DOF",
`DEPARTMENT OF HEALTH AND MENTAL HYGIENE` = "DOHMH",
`DEPARTMENT OF HOMELESS SERVICES` = "DHS",
`DEPARTMENT OF INFORMATION TECHNOLOGY AND TELECOMMUNICATIONS` = "DOITT",
`DEPARTMENT OF INVESTIGATION` = "DOI",
`DEPARTMENT OF PARKS AND RECREATION` = "PARKS",
`DEPARTMENT OF PROBATION` = "DOP",
`DEPARTMENT OF RECORDS AND INFORMATION SERVICES` = "DORIS",
`DEPARTMENT OF SANITATION` = "DSNY",
`DEPARTMENT OF SMALL BUSINESS SERVICES` = "SBS",
`DEPARTMENT OF TRANSPORTATION` = "DOT",
`DEPARTMENT OF VETERANS SERVICES` = "DVS",
`DEPARTMENT OF YOUTH AND COMMUNITY DEVELOPMENT` = "DYCD",
`FIRE DEPARTMENT` = "FDNY",
`HOUSING PRESERVATION AND DEVELOPMENT` = "HPD",
`HUMAN RESOURCES ADMINISTRATION/DEPARTMENT OF SOCIAL SERVICES` = "HRA/DSS",
`LAW DEPARTMENT` = "LAW",
`MAYORS OFFICE OF CONTRACT SERVICES` = "MOCS",
`OFFICE OF ADMINISTRATIVE TRIALS AND HEARINGS`= "OATH",
`OFFICE OF EMERGENCY MANAGEMENT` = "OEM",
`OFFICE OF LABOR RELATIONS` = "OLR",
`OFFICE OF MANAGEMENT AND BUDGET` = "OMB",
`OFFICE OF THE MAYOR` = "MAYORS",
`POLICE DEPARTMENT` = "NYPD" )
# get avg pay ----------
r1$lower_pay <- as.numeric(unlist(lapply(strsplit(r1$pay_band, "-"), "[", 1)))
r1$higher_pay <- as.numeric(unlist(lapply(strsplit(r1$pay_band, "-"), "[", 2)))
r1$avg_pay <- (r1$lower_pay + r1$higher_pay) /2
# ***TO DO: UPDATE NAMING CONVENTIONS***
recode_re <- function(r1) {
temp <- r1
temp$race1 <- as.character(temp$race)
u= c("Two or More Races",
"American Indian or Alaska Native",
"Unknown or Choose Not to Disclose")
temp$race1[temp$race1 %in% u]  <- "Other"
temp$race1[temp$race1 == "Native Hawaiian or Pacific Islander" | temp$race1 == "Asian"] <- "Asian"
temp$race1[temp$race1 == "Black or African American"] <- "Black"
temp$race_ethnicity <- temp$race1
temp <- temp %>% mutate(race_ethnicity = recode(race1, "Black" = "NH Black", # BLACK ALONE
"White" = "NH White", # WHITE ALONE
"Other" = "NH SOR or Race UCND", # AMERICAN INDIAN ALONE, # NATIVE, NOT SPEC/NO OTHER, AK NATIVE ALONE, SOR, TWO OR MORE
"Asian" = "NH Asian")) # ASIAN ALONE | NATIVE HAWAIIAN OR PACIFIC ISL
temp[temp$ethnicity=="Unknown or Choose Not to Disclose",]$race_ethnicity <-
rep("Ethnicity Unknown or Choose Not to Disclose", length(temp[temp$ethnicity=="Unknown or Choose Not to Disclose",]$race_ethnicity))
temp[temp$ethnicity=="Hispanic or Latino",]$race_ethnicity <-
rep("Hispanic or Latino", length(temp[temp$ethnicity=="Hispanic or Latino",]$race_ethnicity))
temp$race1[temp$race1 == "Unknown or Choose Not to Disclose"] <- "NH SOR or Race UCND"
return(temp)
}
r1 <- recode_re(r1)
# filter to full-time ---------
r2 <- r1 %>% filter(employee_status=="Full-Time")
# eda demographic changes -----------
city_pop <- r2 %>% group_by(data_year) %>%
summarise(number_of_employees_bottom = sum(number_of_employees_bottom),
number_of_employees_middle = sum(number_of_employees_middle),
number_of_employees_top= sum(number_of_employees_top)) %>%
mutate(pct.chg_middle = formattable::percent((number_of_employees_middle - lag(number_of_employees_middle))/lag(number_of_employees_middle)),
pct.chg_top = formattable::percent((number_of_employees_top- lag(number_of_employees_top))/lag(number_of_employees_top)),
pct.chg_bottom = (formattable::percent(number_of_employees_bottom - lag(number_of_employees_bottom))/lag(number_of_employees_bottom)),
diff_middle = number_of_employees_middle - lag(number_of_employees_middle),
diff_top = number_of_employees_top - lag(number_of_employees_top),
diff_bottom =  number_of_employees_bottom - lag(number_of_employees_bottom))
####
city_race <- r2 %>% group_by(data_year, race_ethnicity) %>%
summarise(number_of_employees_bottom = sum(number_of_employees_bottom),
number_of_employees_middle = sum(number_of_employees_middle),
number_of_employees_top= sum(number_of_employees_top)) %>%
group_by(race_ethnicity) %>%
arrange(data_year, race_ethnicity) %>%
mutate(pct.chg_middle = formattable::percent((number_of_employees_middle - lag(number_of_employees_middle))/lag(number_of_employees_middle)),
pct.chg_top = formattable::percent((number_of_employees_top- lag(number_of_employees_top))/lag(number_of_employees_top)),
pct.chg_bottom = (formattable::percent(number_of_employees_bottom - lag(number_of_employees_bottom))/lag(number_of_employees_bottom)),
diff_middle = number_of_employees_middle - lag(number_of_employees_middle),
diff_top = number_of_employees_top - lag(number_of_employees_top),
diff_bottom =  number_of_employees_bottom - lag(number_of_employees_bottom))
####
city_gender <- r2 %>% group_by(data_year, gender) %>%
summarise(number_of_employees_bottom = sum(number_of_employees_bottom),
number_of_employees_middle = sum(number_of_employees_middle),
number_of_employees_top= sum(number_of_employees_top)) %>%
group_by(gender) %>%
arrange(data_year, gender) %>%
mutate(pct.chg_middle = formattable::percent((number_of_employees_middle - lag(number_of_employees_middle))/lag(number_of_employees_middle)),
pct.chg_top = formattable::percent((number_of_employees_top- lag(number_of_employees_top))/lag(number_of_employees_top)),
pct.chg_bottom = (formattable::percent(number_of_employees_bottom - lag(number_of_employees_bottom))/lag(number_of_employees_bottom)),
diff_middle = number_of_employees_middle - lag(number_of_employees_middle),
diff_top = number_of_employees_top - lag(number_of_employees_top),
diff_bottom =  number_of_employees_bottom - lag(number_of_employees_bottom))
####
agency_pop <- r2 %>% group_by(data_year, agency_name) %>%
summarise(number_of_employees_bottom = sum(number_of_employees_bottom),
number_of_employees_middle = sum(number_of_employees_middle),
number_of_employees_top= sum(number_of_employees_top)) %>%
group_by(agency_name) %>%
arrange(data_year, agency_name) %>%
mutate(pct.chg_middle = formattable::percent((number_of_employees_middle - lag(number_of_employees_middle))/lag(number_of_employees_middle)),
pct.chg_top = formattable::percent((number_of_employees_top- lag(number_of_employees_top))/lag(number_of_employees_top)),
pct.chg_bottom = (formattable::percent(number_of_employees_bottom - lag(number_of_employees_bottom))/lag(number_of_employees_bottom)),
diff_middle = number_of_employees_middle - lag(number_of_employees_middle),
diff_top = number_of_employees_top - lag(number_of_employees_top),
diff_bottom =  number_of_employees_bottom - lag(number_of_employees_bottom))
####
agency_race <- r2 %>% group_by(data_year, agency_name, race_ethnicity) %>%
summarise(number_of_employees_bottom = sum(number_of_employees_bottom),
number_of_employees_middle = sum(number_of_employees_middle),
number_of_employees_top= sum(number_of_employees_top)) %>%
group_by(agency_name, race_ethnicity) %>%
arrange(agency_name, data_year, race_ethnicity) %>%
mutate(pct.chg_middle = formattable::percent((number_of_employees_middle - lag(number_of_employees_middle))/lag(number_of_employees_middle)),
pct.chg_top = formattable::percent((number_of_employees_top- lag(number_of_employees_top))/lag(number_of_employees_top)),
pct.chg_bottom = (formattable::percent(number_of_employees_bottom - lag(number_of_employees_bottom))/lag(number_of_employees_bottom)),
diff_middle = number_of_employees_middle - lag(number_of_employees_middle),
diff_top = number_of_employees_top - lag(number_of_employees_top),
diff_bottom =  number_of_employees_bottom - lag(number_of_employees_bottom))
####
agency_gender <- r2 %>% group_by(data_year, agency_name, gender) %>%
summarise(number_of_employees_bottom = sum(number_of_employees_bottom),
number_of_employees_middle = sum(number_of_employees_middle),
number_of_employees_top= sum(number_of_employees_top)) %>%
group_by(agency_name, gender) %>%
arrange(agency_name, data_year, gender) %>%
mutate(pct.chg_middle = formattable::percent((number_of_employees_middle - lag(number_of_employees_middle))/lag(number_of_employees_middle)),
pct.chg_top = formattable::percent((number_of_employees_top- lag(number_of_employees_top))/lag(number_of_employees_top)),
pct.chg_bottom = (formattable::percent(number_of_employees_bottom - lag(number_of_employees_bottom))/lag(number_of_employees_bottom)),
diff_middle = number_of_employees_middle - lag(number_of_employees_middle),
diff_top = number_of_employees_top - lag(number_of_employees_top),
diff_bottom =  number_of_employees_bottom - lag(number_of_employees_bottom))
agency_race
# eda plots ------------
#cp <- city_pop %>%
#cp <- city_race %>%
cp <- poor_agency_gender %>%
select(data_year, pct.chg_middle, diff_middle) %>%
mutate(pct.chg_middle  = as.numeric(pct.chg_middle) * 100,
pct.chg_middle = case_when(data_year==2018 ~ 0, TRUE ~ pct.chg_middle),
diff_middle = case_when(data_year==2018 ~ 0, TRUE ~ diff_middle))
# ----- IGNORE: ORIGINAL CODE -----
# focus on agencies who did poorly on our diversity metrics ------
# DSNY - gender (100)
# FDNY - gender (95)
# DOP - race (97)
# ACS - race (94)
# DHS - race (100)
# DOC - race (80)
# HRA - race (79)
# LPC - race (71)
# ----- IGNORE: ORIGINAL CODE -----
# new agencies
# DOITT - gender
# FDNY - gender
# NYPD - gender
# DSNY - gender
# DEP - gender
# DHS - race
# ACS - race
# DOP - race
poor_agency_race <- agency_race %>%
filter(agency_name %in% c('DHS', 'ACS', 'DOP'))
poor_agency_gender <- agency_gender %>%
filter(agency_name %in% c('DSNY', 'FDNY', 'NYPD', 'DOITT', 'DEP'))
# eda plots ------------
#cp <- city_pop %>%
#cp <- city_race %>%
cp <- poor_agency_gender %>%
select(data_year, pct.chg_middle, diff_middle) %>%
mutate(pct.chg_middle  = as.numeric(pct.chg_middle) * 100,
pct.chg_middle = case_when(data_year==2018 ~ 0, TRUE ~ pct.chg_middle),
diff_middle = case_when(data_year==2018 ~ 0, TRUE ~ diff_middle))
cp$data_year <- sub("2018", "baseline", cp$data_year )
cp %>%  filter(agency_name =='DEP') %>%
ggplot(aes(x = pct.chg_middle, y = diff_middle)) +
geom_line(color = "#666666") +
facet_wrap(~gender, nrow=1) +
geom_vline(xintercept = 0, color = "#CACACA", size=0.6) +
geom_hline(yintercept = 0,color = "#CACACA", size=0.6) +
geom_point(aes(color=data_year)) +
hrbrthemes::theme_ipsum() +
ggtitle("DEP Gender") + xlab("Percent Change") + ylab("Relative Difference")
#ggsave("../visuals/DEP_gender_raw_vs_pct.png")
#ggsave("../visuals/citywide_race_raw_vs_pct.png")
cp <- poor_agency_race %>%
select(data_year, pct.chg_middle, diff_middle) %>%
mutate(pct.chg_middle  = as.numeric(pct.chg_middle) * 100,
pct.chg_middle = case_when(data_year==2018 ~ 0, TRUE ~ pct.chg_middle),
diff_middle = case_when(data_year==2018 ~ 0, TRUE ~ diff_middle))
cp %>%  filter(agency_name =='DOP') %>%
ggplot(aes(x = pct.chg_middle, y = diff_middle)) +
geom_line(color = "#666666") +
facet_wrap(~race_ethnicity, nrow=1) +
geom_vline(xintercept = 0, color = "#CACACA", size=0.6) +
geom_hline(yintercept = 0,color = "#CACACA", size=0.6) +
geom_point(aes(color=data_year)) +
hrbrthemes::theme_ipsum() +
ggtitle("DOP Race") + xlab("Percent Change") + ylab("Relative Difference")
ggsave("../visuals/DOP_race_raw_vs_pct.png")
## Setup python environment ----
#source("setup_python.R")
reticulate::repl_python()
reticulate::repl_python()
import numpy as np
import pandas as pd
import plotly
import plotly.express as px
import plotly.graph_objects as go
